{"version":3,"sources":["components/contacts/contactsItem/ContactsItem.module.css","components/form/Form.module.css","components/phonebook/Phonebook.module.css","components/contacts/Contacts.module.css","components/section/Section.module.css","components/findContact/Find.module.css","components/natification/Natification.js","redux/actions/contactsActions.js","components/form/Form.jsx","redux/operations/contactOperations.js","components/header/Header.js","components/section/Section.jsx","components/contacts/contactsItem/ContactsItem.jsx","components/contacts/ContactsList.js","components/findContact/FindContact.jsx","components/phonebook/Phonebook.js","components/App.js","redux/reducers/contactsReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","Div","styled","div","Empty","Used","addNewContact","createAction","getAllContacts","deleteContact","editContact","setFilter","setAlert","setLoading","setError","initialState","name","number","Form","data","isEdit","closeForm","useState","state","setState","dispatch","useDispatch","useSelector","reducerContacts","loading","showUsedAlert","showEmptyAlert","useEffect","setTimeout","handleInputChange","e","target","value","prev","onSubmit","contacts","editedContact","preventDefault","a","axios","put","process","id","getState","post","response","type","className","styles","input","placeholder","onChange","button","onClick","Header","title","style","textAlign","Section","children","container","ContactsItem","onRemove","onEdit","item","span","text","button_edit","ContactsList","isEditeFormOpen","setEditFormOpen","setData","filter","contact","toLowerCase","includes","onHandleDeleteContact","delete","deleteContactOperations","onHandleEditContact","find","TransitionGroup","component","ul","map","CSSTransition","timeout","classNames","FindContact","Phonebook","get","Object","keys","key","in","appear","unmountOnExit","length","App","contactsReducer","createReducer","action","some","payload","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64a96072.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsItem_item__3zWh0\",\"span\":\"ContactsItem_span__fhIsl\",\"text\":\"ContactsItem_text__1rYQP\",\"button\":\"ContactsItem_button__2mjtH\",\"button_edit\":\"ContactsItem_button_edit__1-kC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__28m9x\",\"button\":\"Form_button__2GsM6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Phonebook_enter__W6mqQ\",\"enterActive\":\"Phonebook_enterActive__2GgsA\",\"exit\":\"Phonebook_exit__2VfGk\",\"exitActive\":\"Phonebook_exitActive__1GHQj\",\"appear\":\"Phonebook_appear__265zS\",\"appearActive\":\"Phonebook_appearActive__1Xk1o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Contacts_enter__kzTGe\",\"enterActive\":\"Contacts_enterActive__1FT_U\",\"exit\":\"Contacts_exit__3k5Fy\",\"exitActive\":\"Contacts_exitActive__2hGMg\",\"ul\":\"Contacts_ul__1xj8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3qas_\",\"appear\":\"Section_appear__2INuo\",\"appearActive\":\"Section_appearActive__26HQr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Find_input__1LIRT\",\"button\":\"Find_button__3bLPg\"};","import React from 'react';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n    width: 300px;\n    height: 80px;\n    background-color: tomato;\n    position: absolute;\n    border-radius: 5px;\n    top: 0;\n    right: 0;\n    opacity: 0.8;\n    p {\n        font-size: 25px;\n        padding: 10px;\n        text-align: center;\n    }\n`;\n\nexport const Empty = () => {\n    return (\n        <Div>\n            <p>ALL FIELDS MUST BE FILLED!</p>\n        </Div>\n    );\n};\nexport const Used = () => {\n    return (\n        <Div>\n            <p>IS ALREADY IN USE!</p>\n        </Div>\n    );\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nconst addNewContact = createAction('@contact/addNewContact');\nconst getAllContacts = createAction('@contact/getAllContacts');\nconst deleteContact = createAction('@contact/deleteContact');\nconst editContact = createAction('@contact/editContact');\nconst setFilter = createAction('@contact/setFilter');\nconst setAlert = createAction('@contact/setAlert,');\nconst setLoading = createAction('@contact/setLoading');\nconst setError = createAction('@contact/setLError');\n\nexport {\n    addNewContact,\n    deleteContact,\n    editContact,\n    setFilter,\n    setAlert,\n    getAllContacts,\n    setLoading,\n    setError,\n};\n","import React, { useState, useEffect } from 'react';\nimport styles from './Form.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setAlert } from '../../redux/actions/contactsActions';\nimport {\n    addNewContactOperations,\n    editContactOperations,\n} from '../../redux/operations/contactOperations';\n\nconst initialState = {\n    name: '',\n    number: '',\n};\n\nconst Form = ({ data = { ...initialState }, isEdit = false, closeForm }) => {\n    const [state, setState] = useState({ ...data });\n    const dispatch = useDispatch();\n\n    const setLoading = useSelector(state => state.reducerContacts.loading);\n    const showUsedAlert = useSelector(\n        state => state.reducerContacts.showUsedAlert,\n    );\n    const showEmptyAlert = useSelector(\n        state => state.reducerContacts.showEmptyAlert,\n    );\n\n    useEffect(() => {\n        if (showUsedAlert || showEmptyAlert) {\n            setTimeout(() => dispatch(setAlert(), 2500));\n        }\n    });\n\n    const handleInputChange = e => {\n        const { name, value } = e.target;\n        setState(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (isEdit) {\n            closeForm(false);\n            dispatch(editContactOperations(state));\n        } else dispatch(addNewContactOperations(state));\n        setState({ ...initialState });\n    };\n    const onClose = () => {\n        closeForm(false);\n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Name\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        className={styles.input}\n                        placeholder=\"Name\"\n                        value={state.name}\n                        onChange={handleInputChange}\n                    />\n                </label>\n\n                <label>\n                    Number\n                    <input\n                        type=\"text\"\n                        name=\"number\"\n                        className={styles.input}\n                        placeholder=\"Number\"\n                        value={state.number}\n                        onChange={handleInputChange}\n                    />\n                </label>\n\n                {setLoading ? (\n                    <h2>Loading...</h2>\n                ) : (\n                    <button className={styles.button} type=\"submit\">\n                        {isEdit ? 'Edit Contact' : ' Add contact'}\n                    </button>\n                )}\n                {isEdit && (\n                    <button\n                        className={styles.button}\n                        type=\"button\"\n                        onClick={onClose}\n                    >\n                        Close\n                    </button>\n                )}\n            </form>\n        </>\n    );\n};\n\nexport default Form;\n\n//class\n// import React, { Component } from 'react';\n// import styles from './Form.module.css';\n// import { connect } from 'react-redux';\n// import {\n//     addNewContact,\n//     getAllContacts,\n//     setAlert,\n// } from '../../redux/actions/contactsActions';\n\n// class Form extends Component {\n//     state = {\n//         name: '',\n//         number: '',\n//     };\n\n//     // componentDidMount() {\n//     //     if (localStorage.getItem('contacts')) {\n//     //         this.props.getAllContacts(\n//     //             JSON.parse(localStorage.getItem('contacts')),\n//     //         );\n//     //     }\n//     // }\n\n//     componentDidUpdate() {\n//         if (this.props.showUsedAlert || this.props.showEmptyAlert) {\n//             setTimeout(() => this.props.setAlert(), 2500);\n//         }\n//     }\n\n//     handleInputChange = e => {\n//         this.setState({\n//             [e.target.name]: e.target.value,\n//         });\n//     };\n\n//     handleSubmit = e => {\n//         e.preventDefault();\n//         this.props.onAddContact({\n//             name: this.state.name,\n//             number: this.state.number,\n//         });\n//         this.setState({\n//             name: '',\n//             number: '',\n//         });\n//     };\n\n//     render() {\n//         return (\n//             <form onSubmit={this.handleSubmit}>\n//                 <label>\n//                     Name\n//                     <input\n//                         type=\"text\"\n//                         name=\"name\"\n//                         className={styles.input}\n//                         placeholder=\"Name\"\n//                         value={this.state.name}\n//                         onChange={this.handleInputChange}\n//                     />\n//                 </label>\n\n//                 <label>\n//                     Number\n//                     <input\n//                         type=\"text\"\n//                         name=\"number\"\n//                         className={styles.input}\n//                         placeholder=\"Number\"\n//                         value={this.state.number}\n//                         onChange={this.handleInputChange}\n//                     />\n//                 </label>\n\n//                 <button className={styles.button} type=\"submit\">\n//                     Add contact\n//                 </button>\n//             </form>\n//         );\n//     }\n// }\n\n// const mapStateToProps = state => ({\n//     showUsedAlert: state.reducerContacts.showUsedAlert,\n//     showEmptyAlert: state.reducerContacts.showEmptyAlert,\n// });\n\n// const mapDispatchToProps = {\n//     onAddContact: addNewContact,\n//     setAlert,\n//     getAllContacts,\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import axios from 'axios';\nimport {\n    addNewContact,\n    setError,\n    setLoading,\n    getAllContacts,\n    deleteContact,\n    editContact,\n} from '../actions/contactsActions';\n\nconst addNewContactOperations = contacts => async (dispatch, getState) => {\n    dispatch(setLoading());\n    try {\n        const response = await axios.post(\n            `${process.env.REACT_APP_BASE_URL}/contacts.json`,\n            contacts,\n        );\n        dispatch(addNewContact({ ...contacts, id: response.data.name }));\n    } catch (error) {\n        dispatch(setError(error));\n    } finally {\n        dispatch(setLoading());\n    }\n};\n\nconst getContactOperations = () => async dispatch => {\n    dispatch(setLoading());\n    try {\n        const response = await axios.get(\n            `${process.env.REACT_APP_BASE_URL}/contacts.json`,\n        );\n        const contacts = Object.keys(response.data).map(key => ({\n            ...response.data[key],\n            id: key,\n        }));\n        dispatch(getAllContacts(contacts));\n    } catch (error) {\n        dispatch(setError(error));\n    } finally {\n        dispatch(setLoading());\n    }\n};\nconst deleteContactOperations = id => async dispatch => {\n    dispatch(setLoading());\n    try {\n        await axios.delete(\n            `${process.env.REACT_APP_BASE_URL}/contacts/${id}.json`,\n        );\n        dispatch(deleteContact(id));\n    } catch (error) {\n        dispatch(setError(error));\n    } finally {\n        dispatch(setLoading());\n    }\n};\nconst editContactOperations = editedContact => async dispatch => {\n    dispatch(setLoading());\n    try {\n        await axios.put(\n            `${process.env.REACT_APP_BASE_URL}/contacts/${editedContact.id}.json`,\n            editedContact,\n        );\n        dispatch(editContact(editedContact));\n    } catch (error) {\n        dispatch(setError(error));\n    } finally {\n        dispatch(setLoading());\n    }\n};\nexport {\n    addNewContactOperations,\n    getContactOperations,\n    deleteContactOperations,\n    editContactOperations,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ title }) => {\n    const styles = {\n        textAlign: 'center',\n    };\n\n    return (\n        <header style={styles}>\n            <h1>{title}</h1>\n        </header>\n    );\n};\n\nexport default Header;\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport style from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ children, title }) => {\n    return (\n        <section className={style.container}>\n            {title && <h2>{title}</h2>}\n            {children}\n        </section>\n    );\n};\n\nexport default Section;\n\nSection.propTypes = {\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport styles from './ContactsItem.module.css';\n// import PropTypes from 'prop-types';\n\nconst ContactsItem = ({ id, name, number, onRemove, onEdit }) => (\n    <li className={styles.item}>\n        <span className={styles.span}>√</span>\n        <p className={styles.text}>{name}</p>\n        <p className={styles.text}>{number}</p>\n\n        <button\n            id={id}\n            type=\"button\"\n            className={styles.button_edit}\n            onClick={onEdit}\n        >\n            Edit\n        </button>\n        <button\n            id={id}\n            type=\"button\"\n            className={styles.button}\n            onClick={onRemove}\n        ></button>\n    </li>\n);\n\nexport default ContactsItem;\n\n// ContactsItem.propTypes = {\n//     id: PropTypes.string.isRequired,\n//     name: PropTypes.string.isRequired,\n//     number: PropTypes.string.isRequired,\n//     onRemove: PropTypes.func.isRequired,\n// };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactsItem from './contactsItem/ContactsItem';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport styles from './Contacts.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContactOperations } from '../../redux/operations/contactOperations';\nimport Form from '../form/Form';\n\nconst ContactsList = () => {\n    const [isEditeFormOpen, setEditFormOpen] = useState(false);\n    const [data, setData] = useState({});\n    const dispatch = useDispatch();\n\n    const contacts = useSelector(state =>\n        state.reducerContacts.contacts.filter(contact =>\n            contact.name\n                .toLowerCase()\n                .includes(state.reducerContacts.filter.toLowerCase()),\n        ),\n    );\n\n    const onHandleDeleteContact = e => {\n        const { id } = e.target;\n        dispatch(deleteContactOperations(id));\n    };\n    const onHandleEditContact = e => {\n        setEditFormOpen(true);\n        const id = e.target.id;\n        setData({ ...contacts.find(contact => contact.id === id) });\n    };\n\n    return (\n        <>\n            {isEditeFormOpen && (\n                <Form data={data} isEdit={true} closeForm={setEditFormOpen} />\n            )}\n            <TransitionGroup component=\"ul\" className={styles.ul}>\n                {contacts.map(({ name, number, id }) => (\n                    <CSSTransition key={id} timeout={250} classNames={styles}>\n                        <ContactsItem\n                            key={id}\n                            name={name}\n                            number={number}\n                            id={id}\n                            onRemove={onHandleDeleteContact}\n                            onEdit={onHandleEditContact}\n                        />\n                    </CSSTransition>\n                ))}\n            </TransitionGroup>\n        </>\n    );\n};\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object.isRequired),\n    // deleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport styles from './Find.module.css';\n// import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/actions/contactsActions';\n\nconst FindContact = () => {\n    const filter = useSelector(state => state.reducerContacts.filter);\n    const dispatch = useDispatch();\n    const onHandleChange = e => {\n        const { value } = e.target;\n        dispatch(setFilter(value));\n    };\n    return (\n        <>\n            <input\n                type=\"text\"\n                className={styles.input}\n                placeholder=\"Find contacts by name\"\n                value={filter}\n                onChange={onHandleChange}\n            />\n        </>\n    );\n};\n\nexport default FindContact;\n\n// FindContact.propTypes = {\n//     filter: PropTypes.string.isRequired,\n//     setFilter: PropTypes.func.isRequired,\n// };\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './Phonebook.module.css';\nimport { Empty, Used } from '../natification/Natification';\n\nimport Form from '../form/Form';\nimport Header from '../header/Header';\nimport Section from '../section/Section';\nimport ContactsList from '../contacts/ContactsList';\nimport FindContact from '../findContact/FindContact';\nimport { getContactOperations } from '../../redux/operations/contactOperations';\n\nconst Phonebook = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getContactOperations());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const contacts = useSelector(state => state.reducerContacts.contacts);\n    const showUsedAlert = useSelector(\n        state => state.reducerContacts.showUsedAlert,\n    );\n    const showEmptyAlert = useSelector(\n        state => state.reducerContacts.showEmptyAlert,\n    );\n    return (\n        <>\n            <CSSTransition\n                in={true}\n                appear={true}\n                classNames={styles}\n                timeout={500}\n                unmountOnExit\n            >\n                <Header title=\"Home Work #2 Phonebook\" />\n            </CSSTransition>\n\n            <Section title=\"Phonebook\">\n                <Form />\n            </Section>\n\n            {contacts.length > 1 && (\n                <Section title=\"Finder contacts\">\n                    <FindContact />\n                </Section>\n            )}\n\n            {contacts.length > 0 || (\n                <Section title=\"Phonebook is empty. Please add contact\" />\n            )}\n            {contacts.length > 0 && (\n                <Section title=\"My Contacts\">\n                    <ContactsList />\n                </Section>\n            )}\n\n            <CSSTransition\n                in={showEmptyAlert}\n                timeout={250}\n                classNames={styles}\n                unmountOnExit\n            >\n                <Empty />\n            </CSSTransition>\n\n            <CSSTransition\n                in={showUsedAlert}\n                timeout={250}\n                classNames={styles}\n                unmountOnExit\n            >\n                <Used />\n            </CSSTransition>\n        </>\n    );\n};\n\nexport default Phonebook;\n","import React from 'react';\nimport Phonebook from './phonebook/Phonebook';\n\nconst App = () => {\n    return (\n        <>\n            <Phonebook />\n        </>\n    );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport {\n    addNewContact,\n    deleteContact,\n    editContact,\n    setFilter,\n    setAlert,\n    getAllContacts,\n    setLoading,\n    setError,\n} from '../actions/contactsActions';\n\nconst initialState = {\n    contacts: [],\n    filter: '',\n    showEmptyAlert: false,\n    showUsedAlert: false,\n    loading: false,\n    setError: '',\n};\n\nconst contactsReducer = createReducer(\n    { ...initialState },\n    {\n        [addNewContact]: (state, action) => {\n            if (\n                state.contacts.some(\n                    contact => contact.name === action.payload.name,\n                )\n            ) {\n                return { ...state, showUsedAlert: !state.showUsedAlert };\n            } else if (!action.payload.name.length) {\n                return { ...state, showEmptyAlert: !state.showEmptyAlert };\n            } else\n                return {\n                    ...state,\n                    contacts: [...state.contacts, action.payload],\n                };\n        },\n\n        [getAllContacts]: (state, action) => ({\n            ...state,\n            contacts: [...action.payload],\n        }),\n\n        [deleteContact]: (state, action) => ({\n            ...state,\n            contacts: [\n                ...state.contacts.filter(\n                    contact => contact.id !== action.payload,\n                ),\n            ],\n        }),\n        [editContact]: (state, action) => ({\n            ...state,\n            contacts: [\n                ...state.contacts.map(contact =>\n                    contact.id === action.payload.id\n                        ? { ...action.payload }\n                        : contact,\n                ),\n            ],\n        }),\n        [setFilter]: (state, action) => ({\n            ...state,\n            filter: action.payload,\n        }),\n        [setAlert]: state => ({\n            ...state,\n            showEmptyAlert: false,\n            showUsedAlert: false,\n        }),\n\n        [setLoading]: state => ({\n            ...state,\n            loading: !state.loading,\n        }),\n        [setError]: state => ({\n            ...state,\n            setError: state.payload,\n        }),\n    },\n);\n\nexport default contactsReducer;\n//----------------------------\n// import {\n//     ADDNEWCONTACT,\n//     DELETECONTACT,\n//     SETFILTER,\n//     SETALERT,\n//     GETALLCONTACTS,\n// } from '../constants/contactsConstants';\n\n// const initialState = {\n//     contacts: [\n//         { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//         { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//         { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//         { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//     showEmptyAlert: false,\n//     showUsedAlert: false,\n// };\n\n// const contactsReducer = (state = { ...initialState }, action) => {\n//     switch (action.type) {\n//         case ADDNEWCONTACT:\n//             // localStorage.setItem(\n//             //     'contacts',\n//             //     JSON.stringify([...state.contacts, action.payload]),\n//             // );\n//             if (\n//                 state.contacts.some(\n//                     contact => contact.name === action.payload.name,\n//                 )\n//             ) {\n//                 return { ...state, showUsedAlert: !state.showUsedAlert };\n//             } else if (!action.payload.name.length) {\n//                 return { ...state, showEmptyAlert: !state.showEmptyAlert };\n//             } else\n//                 return {\n//                     ...state,\n//                     contacts: [...state.contacts, action.payload],\n//                 };\n\n//         case DELETECONTACT:\n//             // localStorage.setItem(\n//             //     'contacts',\n//             //     JSON.stringify([...state.contacts, action.payload]),\n//             // );\n//             return {\n//                 ...state,\n//                 contacts: [\n//                     ...state.contacts.filter(\n//                         contact => contact.id !== action.payload,\n//                     ),\n//                 ],\n//             };\n\n//         case SETFILTER:\n//             return {\n//                 ...state,\n//                 filter: action.payload,\n//             };\n\n//         case SETALERT:\n//             return {\n//                 ...state,\n//                 showEmptyAlert: false,\n//                 showUsedAlert: false,\n//             };\n//         case GETALLCONTACTS:\n//             return {\n//                 ...state,\n//                 contacts: [...action.payload],\n//             };\n\n//         default:\n//             return state;\n//     }\n// };\n\n// export default contactsReducer;\n","import { combineReducers } from 'redux';\nimport contactsReducer from './contactsReducer';\n\nconst rootReducer = combineReducers({\n    reducerContacts: contactsReducer,\n});\n\nexport default rootReducer;\n","import rootReducer from './reducers/rootReducer';\nimport { configureStore } from '@reduxjs/toolkit';\n\nconst store = configureStore({\n    reducer: rootReducer,\n});\n\nexport default store;\n//----------------------\n// import { createStore } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import rootReducer from './reducers/rootReducer';\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// export default store;\n","import React from 'react';\nimport App from './components/App';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// console.log('store :', store);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}